# -*- coding: utf-8 -*-
"""Fall-2022-Exam-3b-Simulation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KvvjEnzycTsHFpTvpXfWa0srpRkHO8_f
"""

import numpy as np

p_d = 0.5 # probability of airing 30 or 60 second commercial
p_bh = 0.80 # probability of airing another commercial after the previous one has been played
t_1 = 0.5 # [minutes], length of 30 second commercial
t_2 = 1 # [minutes], length of 60 second commercial
coin_1 = ['H','T'] # the coin that the host flips in round 1
coin_2 = ['H','H','H','H','T'] # biased coin that lands on heads 80% of the time
break_times = [] # begin the break time output
break_count = [] # begin the break amount count
N = 10000 # number of times to perform experiment

# begin main loop
for i in range(N):
  break_length = 0 # initialize the break counter
  toss_1 = np.random.choice(coin_1) # flip the first coin
  if toss_1 == 'H': # if first toss is heads, air a 30 second commercial
    while True: # begin the commercial break decision loop
      toss_2 = np.random.choice(coin_2) # flip the second coin
      if toss_2 == 'H': # if a heads comes up from the biased coin, air another commercial, either 30 second or 60 seconds long.
        toss_i = np.random.choice(coin_1)
        if toss_i == 'H':
          break_length += t_1 # air a 30 second commercial
        else:
          break_length += t_2 # air a 60 second commercial
      else:
        break # end the loop if the biased coin lands on tails
    if break_length > 0: # if this is changed to be >= 0, you get the same answer presented in the solution. However, we are told that a break only consists of a group of back-to-back commercials, implying more than one commercial must be played to be considered a commercial break.
      break_length += t_1 # only add 30 seconds to the break if another commercial came before. (We are told that a break is back-to-back commercials)
  else: # if first toss is tails, air a 60 second commercial
    while True: # begin the commercial break decision loop
      toss_2 = np.random.choice(coin_2) # flip the second coin
      if toss_2 == 'H': # if a heads comes up from the biased coin, air another commercial, either 30 second or 60 seconds long.
        toss_i = np.random.choice(coin_1)
        if toss_i == 'H':
          break_length += t_1 # air a 30 second commercial
        else:
          break_length += t_2 # air a 60 second commercial
      else:
        break # end the loop if the biased coin lands on tails
    if break_length > 0: # if this is changed to be >= 0, you get the same answer presented in the solution. However, we are told that a break only consists of a group of back-to-back commercials, implying more than one commercial must be played to be considered a commercial break.
      break_length += t_2 # only add 30 seconds to the break if another commercial came before. (We are told that a break is back-to-back commercials)
  break_times.append(break_length)

print(np.mean(break_times))